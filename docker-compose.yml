version: '3.8'

services:
  # Main Next.js application
  streaming-encoder:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./dev.db
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-here
    volumes:
      - ./data:/app/data
      - ./hls:/var/www/hls
      - ./logs:/app/logs
    depends_on:
      - db
    networks:
      - streaming-network
    restart: unless-stopped

  # Database
  db:
    image: alpine:latest
    volumes:
      - ./data:/data
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /data &&
        if [ ! -f /data/dev.db ]; then
          sqlite3 /data/dev.db 'VACUUM;'
        fi
      "
    networks:
      - streaming-network
    restart: unless-stopped

  # FFmpeg with SCTE-35 support (based on superkabuki's SCTE35_FFmpeg)
  ffmpeg-scte35:
    build:
      context: .
      dockerfile: Dockerfile.ffmpeg
    volumes:
      - ./hls:/var/www/hls
      - ./logs:/app/logs
    networks:
      - streaming-network
    restart: unless-stopped
    profiles:
      - tools

  # SCTE-35 tools (threefive, x9k3, etc.)
  scte35-tools:
    build:
      context: .
      dockerfile: Dockerfile.scte35
    volumes:
      - ./hls:/var/www/hls
      - ./logs:/app/logs
      - ./scripts:/app/scripts
    networks:
      - streaming-network
    restart: unless-stopped
    profiles:
      - tools

  # HLS segmenter with SCTE-35 injection (x9k3)
  hls-segmenter:
    build:
      context: .
      dockerfile: Dockerfile.x9k3
    volumes:
      - ./hls:/var/www/hls
      - ./logs:/app/logs
    networks:
      - streaming-network
    restart: unless-stopped
    profiles:
      - tools

  # Nginx for serving HLS content
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./hls:/usr/share/nginx/html/hls
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - streaming-network
    restart: unless-stopped
    profiles:
      - tools

  # Redis for caching and session management (optional)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - streaming-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  redis_data:

networks:
  streaming-network:
    driver: bridge